{"version":3,"sources":["assets/textures/sun_texture.jpg","assets/textures/mercury.png","assets/textures/venus.jpg","assets/textures/earth.jpg","assets/textures/mars.jpg","assets/textures/jupiter.jpg","assets/textures/saturn.png","assets/textures/uranus.jpg","assets/textures/neptue.jpg","components/Trajectory/index.jsx","assets/textures/moon.jpg","components/Planet/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Trajectory","radius","position","rotation","Math","PI","attach","args","color","side","THREE","Circle","startRadius","endRadius","Moon","planetX","planetZ","texture","useLoader","moon","ref","React","useRef","t","useFrame","current","x","cos","z","sin","y","map","Planet","name","outerRadius","diameter","textureImage","rotationSpeed","positionSpeed","App","className","style","background","camera","OrbitControls","Stars","sun","mercury","venus","earth","mars","jupiter","saturn","uranus","neptune","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3944801.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sun_texture.b34e6ead.jpg\";","export default __webpack_public_path__ + \"static/media/mercury.13603d98.png\";","export default __webpack_public_path__ + \"static/media/venus.5a63c6e6.jpg\";","export default __webpack_public_path__ + \"static/media/earth.8857ef58.jpg\";","export default __webpack_public_path__ + \"static/media/mars.c40fbb60.jpg\";","export default __webpack_public_path__ + \"static/media/jupiter.5ce685aa.jpg\";","export default __webpack_public_path__ + \"static/media/saturn.5b01fe8a.png\";","export default __webpack_public_path__ + \"static/media/uranus.428ad3f9.jpg\";","export default __webpack_public_path__ + \"static/media/neptue.50c047f5.jpg\";","import React from 'react'\nimport * as THREE from \"three\";\n\n\n\nexport const Trajectory = ({ radius }) => {\n  return (\n    <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>\n      <ringGeometry attach=\"geometry\" args={[radius - 0.03, radius, 64]} />\n      <lineBasicMaterial attach=\"material\" color='#FFFFFF' side={THREE.DoubleSide} />\n    </mesh>\n  )\n}","export default __webpack_public_path__ + \"static/media/moon.8f80953b.jpg\";","import React from 'react'\nimport * as THREE from \"three\";\nimport { useFrame, useLoader } from '@react-three/fiber'\nimport moon from '../../assets/textures/moon.jpg'\n\n\nconst Circle = ({ position, startRadius, endRadius, color }) => {\n    return (\n        <mesh position={position} rotation={[-Math.PI / 2, 0, 0]}>\n            <ringGeometry attach=\"geometry\" args={[startRadius, endRadius, 64]} />\n            <lineBasicMaterial attach=\"material\" color={color} side={THREE.DoubleSide} />\n        </mesh>\n    )\n}\n\nconst Moon = ({ planetX, planetZ }) => {\n    const texture = useLoader(THREE.TextureLoader, moon)\n    const ref = React.useRef()\n    let t = 0;\n    useFrame(() => {\n        t += 0.04;\n        ref.current.position.x = 2 * Math.cos(t) + planetX\n        ref.current.position.z = 2 * Math.sin(t) + planetZ\n        ref.current.rotation.y += 0.01\n    })\n    return (\n        <mesh ref={ref}>\n            <sphereBufferGeometry attach=\"geometry\" args={[0.2, 32, 32]} />\n            <meshBasicMaterial attach=\"material\" map={texture} />\n        </mesh>\n    )\n}\n\n\nexport const Planet = ({ name, outerRadius, diameter, textureImage, rotationSpeed, positionSpeed }) => {\n    const texture = useLoader(THREE.TextureLoader, textureImage)\n    const ref = React.useRef()\n    let position = [0, 0, 0]\n    let t = 0;\n    useFrame(() => {\n        if (positionSpeed) {\n            t += positionSpeed;\n            ref.current.position.x = outerRadius * Math.cos(t) + 0\n            ref.current.position.z = outerRadius * Math.sin(t) + 0\n        }\n        position = [ref.current.position.x, ref.current.position.y, ref.current.position.z]\n        ref.current.rotation.y += rotationSpeed\n    })\n\n\n    return (\n        <group ref={ref} position={[outerRadius, 0, 0]} >\n            <mesh >\n                <sphereBufferGeometry attach=\"geometry\" args={[diameter, 32, 32]} />\n                <meshBasicMaterial attach=\"material\" map={texture} />\n            </mesh>\n            {name === 'Earth' && (\n                <Moon planetX={position[0]} planetZ={position[2]} />\n            )}\n            {name === 'Saturn' && (\n                <>\n                    <Circle position={position} color=\"#272322\" startRadius={diameter + 0.05} endRadius={diameter + 0.25} />\n                    <Circle position={position} color=\"#7f7566\" startRadius={diameter + 0.26} endRadius={diameter + 0.7} />\n                    <Circle position={position} color=\"#5a554f\" startRadius={diameter + 0.71} endRadius={diameter + 0.9} />\n                </>\n            )}\n        </group>\n    )\n}","import React from 'react'\nimport './App.css';\nimport {Canvas, useFrame, useLoader} from '@react-three/fiber'\nimport {OrbitControls, SpotLight, Stars} from '@react-three/drei'\nimport {Physics, useBox, usePlane} from '@react-three/cannon'\nimport sun from './assets/textures/sun_texture.jpg'\nimport mercury from './assets/textures/mercury.png'\nimport venus from './assets/textures/venus.jpg'\nimport earth from './assets/textures/earth.jpg'\nimport mars from './assets/textures/mars.jpg'\nimport jupiter from './assets/textures/jupiter.jpg'\nimport saturn from './assets/textures/saturn.png'\nimport uranus from './assets/textures/uranus.jpg'\nimport neptune from './assets/textures/neptue.jpg'\n\nimport { Trajectory } from './components/Trajectory';\nimport { Planet } from './components/Planet';\n// import { TextureLoader } from 'three/examples/jsm/loaders/TextureLoader'\n\n// const Box = ({pressedKey}) => {\n//   const [ref, api] = useBox(() => ({mass: 1, position: [0,20,0], rotation: [10, 1, 0]}))\n//   return (\n//     <mesh ref={ref} position={[0,0,0]}>\n//       <boxBufferGeometry attach=\"geometry\" />\n//       <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\n//     </mesh>\n//   )\n// }\n\n// const Plane = () => {\n//   const [ref] = usePlane(() => ({rotation: [-Math.PI / 2, 0, 0], position: [0,-0,0]}))\n//   return (\n//     <mesh ref={ref} position={[0,-1,0]} rotation={[-Math.PI / 2, 0, 0]}>\n//       <planeBufferGeometry attach=\"geometry\" args={[100,100]} />\n//       <meshLambertMaterial attach=\"material\" color=\"green\" />\n//     </mesh>\n//   )\n// }\n\nfunction App() {\n  return (\n  <Canvas className=\"App\" style={{background: '#000'}} camera={{position: [0, 3, -20]}}>\n    <OrbitControls />\n    <Stars />\n    {/* <SpotLight position={[0,5,0]} /> */}\n    {/* <ambientLight intensity={0.5} /> */}\n    {/* <spotLight position={[10,15,10]} angle={0.3} /> */}\n    <Physics>\n      <Planet name=\"Sun\" outerRadius={0} diameter={3} textureImage={sun} rotationSpeed={0.01}/>\n      <Trajectory radius={7} />\n      <Planet name=\"Mercury\" outerRadius={7} diameter={0.2} textureImage={mercury} rotationSpeed={0.01} positionSpeed={0.02} />\n      <Trajectory radius={14} />\n      <Planet name=\"Venus\" outerRadius={14} diameter={0.6} textureImage={venus} rotationSpeed={0.01} positionSpeed={0.01} />\n      <Trajectory radius={25} />\n      <Planet name=\"Earth\" outerRadius={25} diameter={0.6} textureImage={earth} rotationSpeed={0.01} positionSpeed={0.005} />\n      <Trajectory radius={40} />\n      <Planet name=\"Mars\" outerRadius={40} diameter={0.3} textureImage={mars} rotationSpeed={0.01} positionSpeed={0.003} />\n      <Trajectory radius={55} />\n      <Planet name=\"Jupiter\" outerRadius={55} diameter={2} textureImage={jupiter} rotationSpeed={0.01} positionSpeed={0.0005} />\n      <Trajectory radius={70} />\n      <Planet name=\"Saturn\" outerRadius={70} diameter={1.5} textureImage={saturn} rotationSpeed={0.01} positionSpeed={0.0002} />\n      <Trajectory radius={85} />\n      <Planet name=\"Uranus\" outerRadius={85} diameter={1} textureImage={uranus} rotationSpeed={0.01} positionSpeed={0.00008}/>\n      <Trajectory radius={100} />\n      <Planet name=\"Neptune\" outerRadius={100} diameter={1} textureImage={neptune} rotationSpeed={0.01} positionSpeed={0.00005}/>\n    </Physics>\n  </Canvas>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}