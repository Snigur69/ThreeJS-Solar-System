{"version":3,"sources":["assets/textures/sun_texture.jpg","assets/textures/mercury.png","assets/textures/venus.jpg","assets/textures/earth.jpg","assets/textures/mars.jpg","assets/textures/jupiter.jpg","assets/textures/saturn.png","assets/textures/uranus.jpg","assets/textures/neptue.jpg","assets/textures/moon.jpg","assets/textures/phobos.jpg","assets/textures/deimos.png","assets/textures/io.jpg","assets/textures/europa.jpg","assets/textures/ganymede.png","assets/textures/callisto.jpg","assets/textures/enceladus.jpg","assets/textures/titan.png","components/Trajectory/index.jsx","components/Satellite/index.jsx","components/Planet/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Trajectory","radius","position","rotation","Math","PI","attach","args","color","side","THREE","Satellite","name","diameter","outerRadius","rotationSpeed","image","planetX","planetZ","texture","useLoader","ref","React","useRef","t","useFrame","current","x","cos","z","sin","y","Html","distanceFactor","style","marginTop","center","className","map","Circle","startRadius","endRadius","Planet","textureImage","positionSpeed","satellites","length","el","index","moon","phobos","deimos","io","europa","ganymede","callisto","enceladus","titan","App","background","camera","OrbitControls","Stars","sun","mercury","venus","earth","Earth","mars","Mars","jupiter","Jupiter","saturn","Saturn","uranus","neptune","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bda4c3b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sun_texture.b34e6ead.jpg\";","export default __webpack_public_path__ + \"static/media/mercury.13603d98.png\";","export default __webpack_public_path__ + \"static/media/venus.5a63c6e6.jpg\";","export default __webpack_public_path__ + \"static/media/earth.8857ef58.jpg\";","export default __webpack_public_path__ + \"static/media/mars.c40fbb60.jpg\";","export default __webpack_public_path__ + \"static/media/jupiter.5ce685aa.jpg\";","export default __webpack_public_path__ + \"static/media/saturn.5b01fe8a.png\";","export default __webpack_public_path__ + \"static/media/uranus.428ad3f9.jpg\";","export default __webpack_public_path__ + \"static/media/neptue.50c047f5.jpg\";","export default __webpack_public_path__ + \"static/media/moon.8f80953b.jpg\";","export default __webpack_public_path__ + \"static/media/phobos.fdf8eb18.jpg\";","export default __webpack_public_path__ + \"static/media/deimos.e919b9c8.png\";","export default __webpack_public_path__ + \"static/media/io.5889c74c.jpg\";","export default __webpack_public_path__ + \"static/media/europa.a243994a.jpg\";","export default __webpack_public_path__ + \"static/media/ganymede.cfddeb31.png\";","export default __webpack_public_path__ + \"static/media/callisto.d91559a2.jpg\";","export default __webpack_public_path__ + \"static/media/enceladus.c87376e1.jpg\";","export default __webpack_public_path__ + \"static/media/titan.d1a0294f.png\";","import React from 'react'\nimport * as THREE from \"three\";\n\n\n\nexport const Trajectory = ({ radius }) => {\n  return (\n    <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>\n      <ringGeometry attach=\"geometry\" args={[radius - 0.03, radius, 64]} />\n      <lineBasicMaterial attach=\"material\" color='#FFFFFF' side={THREE.DoubleSide} />\n    </mesh>\n  )\n}","import React from 'react'\nimport * as THREE from \"three\";\nimport { Html } from \"@react-three/drei\"\nimport { useFrame, useLoader } from '@react-three/fiber'\n\nexport const Satellite = ({ name, diameter, outerRadius, rotationSpeed, image, planetX, planetZ }) => {\n    const texture = useLoader(THREE.TextureLoader, image)\n    const ref = React.useRef()\n    let t = 0;\n    useFrame(() => {\n        t += rotationSpeed;\n        ref.current.position.x = outerRadius * Math.cos(t) + planetX\n        ref.current.position.z = outerRadius * Math.sin(t) + planetZ\n        ref.current.rotation.y += 0.01\n    })\n    return (\n        <group ref={ref}>\n            <Html distanceFactor={20} style={{ marginTop: `-20px` }} center>\n                <div className=\"planet_label\">\n                    {name}\n                </div>\n            </Html>\n            <mesh>\n                <sphereBufferGeometry attach=\"geometry\" args={[diameter, 32, 32]} />\n                <meshBasicMaterial attach=\"material\" map={texture} />\n            </mesh>\n        </group>\n\n    )\n}","import React from 'react'\nimport * as THREE from \"three\";\nimport { useFrame, useLoader } from '@react-three/fiber'\nimport { Html } from \"@react-three/drei\"\nimport { Satellite } from '../Satellite';\n\n\nconst Circle = ({ position, startRadius, endRadius, color }) => {\n    return (\n        <mesh position={position} rotation={[-Math.PI / 2, 0, 0]}>\n            <ringGeometry attach=\"geometry\" args={[startRadius, endRadius, 64]} />\n            <lineBasicMaterial attach=\"material\" color={color} side={THREE.DoubleSide} />\n        </mesh>\n    )\n}\n\nexport const Planet = ({ name, outerRadius, diameter, textureImage, rotationSpeed, positionSpeed, satellites = [] }) => {\n    const texture = useLoader(THREE.TextureLoader, textureImage)\n    const ref = React.useRef()\n    let position = [0, 0, 0]\n    let t = 0;\n    useFrame(() => {\n        if (positionSpeed) {\n            t += positionSpeed;\n            ref.current.position.x = outerRadius * Math.cos(t) + 0\n            ref.current.position.z = outerRadius * Math.sin(t) + 0\n        }\n        position = [ref.current.position.x, ref.current.position.y, ref.current.position.z]\n        ref.current.rotation.y += rotationSpeed\n    })\n\n\n    return (\n        <group ref={ref} position={[outerRadius, 0, 0]} >\n            <Html distanceFactor={50} style={{ marginTop: `-${diameter * 30}px` }} center>\n                <div className=\"planet_label\">\n                    {name}\n                </div>\n            </Html>\n            <mesh >\n                <sphereBufferGeometry attach=\"geometry\" args={[diameter, 32, 32]} />\n                <meshBasicMaterial attach=\"material\" map={texture} />\n            </mesh>\n            {satellites.length > 0 && (\n                satellites.map((el, index) => (\n                    <Satellite key={index} name={el.name} diameter={el.diameter} outerRadius={el.outerRadius} rotationSpeed={el.rotationSpeed} image={el.image} planetX={position[0]} planetZ={position[2]} />\n                ))\n            )}\n            {name === 'Saturn' && (\n                <>\n                    <Circle position={position} color=\"#272322\" startRadius={diameter + 0.05} endRadius={diameter + 0.25} />\n                    <Circle position={position} color=\"#7f7566\" startRadius={diameter + 0.26} endRadius={diameter + 0.7} />\n                    <Circle position={position} color=\"#5a554f\" startRadius={diameter + 0.71} endRadius={diameter + 0.9} />\n                </>\n            )}\n        </group>\n    )\n}","import React from 'react'\nimport './App.css';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'\nimport { OrbitControls, SpotLight, Stars } from '@react-three/drei'\nimport { Physics, useBox, usePlane } from '@react-three/cannon'\nimport sun from './assets/textures/sun_texture.jpg'\nimport mercury from './assets/textures/mercury.png'\nimport venus from './assets/textures/venus.jpg'\nimport earth from './assets/textures/earth.jpg'\nimport mars from './assets/textures/mars.jpg'\nimport jupiter from './assets/textures/jupiter.jpg'\nimport saturn from './assets/textures/saturn.png'\nimport uranus from './assets/textures/uranus.jpg'\nimport neptune from './assets/textures/neptue.jpg'\nimport moon from './assets/textures/moon.jpg'\nimport phobos from './assets/textures/phobos.jpg'\nimport deimos from './assets/textures/deimos.png'\n\nimport io from './assets/textures/io.jpg'\nimport europa from './assets/textures/europa.jpg'\nimport ganymede from './assets/textures/ganymede.png'\nimport callisto from './assets/textures/callisto.jpg'\n\nimport enceladus from './assets/textures/enceladus.jpg'\nimport titan from './assets/textures/titan.png'\n\n\n\n\nimport { Trajectory } from './components/Trajectory';\nimport { Planet } from './components/Planet';\n// import { TextureLoader } from 'three/examples/jsm/loaders/TextureLoader'\n\n// const Box = ({pressedKey}) => {\n//   const [ref, api] = useBox(() => ({mass: 1, position: [0,20,0], rotation: [10, 1, 0]}))\n//   return (\n//     <mesh ref={ref} position={[0,0,0]}>\n//       <boxBufferGeometry attach=\"geometry\" />\n//       <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\n//     </mesh>\n//   )\n// }\n\n// const Plane = () => {\n//   const [ref] = usePlane(() => ({rotation: [-Math.PI / 2, 0, 0], position: [0,-0,0]}))\n//   return (\n//     <mesh ref={ref} position={[0,-1,0]} rotation={[-Math.PI / 2, 0, 0]}>\n//       <planeBufferGeometry attach=\"geometry\" args={[100,100]} />\n//       <meshLambertMaterial attach=\"material\" color=\"green\" />\n//     </mesh>\n//   )\n// }\n\nconst satellites = {\n  'Earth': [\n    { name: 'Moon', diameter: 0.2, outerRadius: 2, rotationSpeed: 0.04, image: moon }\n  ],\n  'Mars': [\n    { name: 'Phobos', diameter: 0.1, outerRadius: 1, rotationSpeed: 0.04, image: phobos },\n    { name: 'Deimos', diameter: 0.05, outerRadius: 2, rotationSpeed: 0.02, image: deimos },\n  ],\n  'Jupiter': [\n    { name: 'Io', diameter: 0.18, outerRadius: 3, rotationSpeed: 0.04, image: io },\n    { name: 'Europa', diameter: 0.09, outerRadius: 4, rotationSpeed: 0.03, image: europa },\n    { name: 'Ganymede', diameter: 0.3, outerRadius: 5, rotationSpeed: 0.02, image: ganymede },\n    { name: 'Callisto', diameter: 0.23, outerRadius: 6, rotationSpeed: 0.01, image: callisto },\n  ],\n  'Saturn': [\n    { name: 'Enceladus', diameter: 0.07, outerRadius: 3.5, rotationSpeed: 0.04, image: enceladus },\n    { name: 'Titan', diameter: 0.3, outerRadius: 5, rotationSpeed: 0.02, image: titan },\n  ]\n}\n\nfunction App() {\n  return (\n    <Canvas className=\"App\" style={{ background: '#000' }} camera={{ position: [0, 3, -20] }}>\n      <OrbitControls />\n      <Stars />\n      {/* <SpotLight position={[0,5,0]} /> */}\n      {/* <ambientLight intensity={0.5} /> */}\n      {/* <spotLight position={[10,15,10]} angle={0.3} /> */}\n      <Physics>\n        <Planet name=\"Sun\" outerRadius={0} diameter={3} textureImage={sun} rotationSpeed={0.01} />\n        <Trajectory radius={7} />\n        <Planet name=\"Mercury\" outerRadius={7} diameter={0.2} textureImage={mercury} rotationSpeed={0.01} positionSpeed={0.02} />\n        <Trajectory radius={14} />\n        <Planet name=\"Venus\" outerRadius={14} diameter={0.6} textureImage={venus} rotationSpeed={0.01} positionSpeed={0.01} />\n        <Trajectory radius={25} />\n        <Planet name=\"Earth\" outerRadius={25} diameter={0.6} textureImage={earth} rotationSpeed={0.01} positionSpeed={0.005} satellites={satellites.Earth} />\n        <Trajectory radius={40} />\n        <Planet name=\"Mars\" outerRadius={40} diameter={0.3} textureImage={mars} rotationSpeed={0.01} positionSpeed={0.003} satellites={satellites.Mars} />\n        <Trajectory radius={55} />\n        <Planet name=\"Jupiter\" outerRadius={55} diameter={2} textureImage={jupiter} rotationSpeed={0.01} positionSpeed={0.0005} satellites={satellites.Jupiter} />\n        <Trajectory radius={70} />\n        <Planet name=\"Saturn\" outerRadius={70} diameter={1.5} textureImage={saturn} rotationSpeed={0.01} positionSpeed={0.0002} satellites={satellites.Saturn} />\n        <Trajectory radius={85} />\n        <Planet name=\"Uranus\" outerRadius={85} diameter={1} textureImage={uranus} rotationSpeed={0.01} positionSpeed={0.00008} />\n        <Trajectory radius={100} />\n        <Planet name=\"Neptune\" outerRadius={100} diameter={1} textureImage={neptune} rotationSpeed={0.01} positionSpeed={0.00005} />\n      </Physics>\n    </Canvas>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}